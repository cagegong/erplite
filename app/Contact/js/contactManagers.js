// Generated by CoffeeScript 1.7.1
(function() {
  angular.module('contactModule').factory('contactManager', [
    '$http', '$q', 'Contact', 'ContactData', 'erpSettings', '$log', '$rootScope', 'Restangular', function($http, $q, Contact, ContactData, erpSettings, $log, $rootScope, Restangular) {
      return {
        _pool: {},
        _syncTimeDict: {},
        _contactList: [],
        _retrieveInstance: function(id, data) {
          var instance;
          instance = this._pool[id];
          if (instance != null) {
            instance.setData(data);
          } else {
            instance = new Contact(data);
            this._pool[id] = instance;
            this._syncTimeDict[id] = new Date();
          }
          return instance;
        },
        _search: function(id) {
          return this._pool[id];
        },
        _load: function(id, deferred) {
          var scope;
          scope = this;
          $http.get($rootScope.apimap.contact + id).success(function(data) {
            var contact, contactDataUrl;
            contact = new Contact(data);
            contact.url = $rootScope.apimap.contact + id;
            if (contact.data != null) {
              contactDataUrl = contact.data;
              return $http.get(contactDataUrl).success(function(contactData) {
                contact.data = contactData;
                contact.data.url = contactDataUrl;
                return deferred.resolve(contact);
              }).error(function(data, status) {
                return deferred.reject({
                  "data": data,
                  "status": status
                });
              });
            } else {
              return deferred.resolve(contact);
            }
          }).error(function(data, status) {
            return deferred.reject({
              "data": data,
              "status": status
            });
          });
        },
        loadContact: function(id) {
          var deferred;
          deferred = $q.defer();
          this._load(id, deferred);
          return deferred.promise;
        },
        loadContactList: function() {
          var deferred;
          deferred = $q.defer();
          Restangular.all('contacts').getList().then(function(data) {
            deferred.resolve(data);
            return this._contactList = data;
          }, function(response) {
            console.log(response);
            return deferred.reject(response);
          });
          return deferred.promise;
        },
        getPreviousContact: function(id) {
          var index, _i, _ref;
          if (typeof _contactList !== "undefined" && _contactList !== null) {
            for (index = _i = 0, _ref = _contactList.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; index = 0 <= _ref ? ++_i : --_i) {
              if (_contactList[index].id === id) {
                if (index === 0) {
                  return id;
                } else {
                  return _contactList[index - 1].id;
                }
                break;
              }
            }
          }
          return id;
        },
        getNextContact: function(id) {
          var index, _i, _ref;
          if (typeof _contactList !== "undefined" && _contactList !== null) {
            for (index = _i = 0, _ref = _contactList.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; index = 0 <= _ref ? ++_i : --_i) {
              if (_contactList[index].id === id) {
                if (index === _contactList.length - 1) {
                  return id;
                } else {
                  return _contactList[index + 1].id;
                }
                break;
              }
            }
          }
          return id;
        },
        getContact: function(id) {
          var contact, deferred;
          deferred = $q.defer();
          contact = this._search(id);
          if (contact != null) {
            deferred.resolve(contact);
          } else {
            this._load(id, deferred);
          }
          return deferred.promise;
        },
        initContactData: function(contactData) {
          return new ContactData(contactData);
        },
        loadAllContact: function() {
          var deferred, scope;
          deferred = $q.defer();
          scope = this;
          $http.get($rootScope.apimap.contact).success(function(contactsArray) {
            var contacts;
            contacts = [];
            contactsArray.forEach(function(contactData) {
              var contact;
              if (contactData.id != null) {

              } else {
                contactData.id = contacts.length + 1;
                contact = scope._retrieveInstance(contactData.id, contactData);
                return contacts.push(contact);
              }
            });
            return deferred.resolve(contacts);
          }).error(function(data, status) {
            return deferred.reject({
              "data": data,
              "status": status
            });
          });
          return deferred.promise;
        },
        setContact: function(contactData) {
          var contact, scope;
          scope = this;
          contact = this._search(contactData.id);
          if (contact != null) {
            contact.setData(contactData);
          } else {
            contact = scope._retrieveInstance(contactData);
          }
          return contact;
        }
      };
    }
  ]);

}).call(this);
