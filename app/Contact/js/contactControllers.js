// Generated by CoffeeScript 1.7.1
(function() {
  angular.module('contactModule').controller('ContactListCtrl', [
    '$scope', '$http', 'contactManager', '$log', 'ModelBase', function($scope, $http, contactManager, $log, ModelBase) {
      var promise;
      $scope.title = "联系人";
      $scope.icon = "./img/128px/layers_128px.png";
      $scope.backUrl = "#/home";
      $scope.isAdvanceSearchCollapsed = true;
      $scope.toggleAdvanceSearch = function() {
        if ($scope.isAdvanceSearchCollapsed) {
          return $scope.isAdvanceSearchCollapsed = false;
        } else {
          return $scope.isAdvanceSearchCollapsed = true;
        }
      };
      $scope.currentPage = 1;
      $scope.contactMatch = function(query) {
        return function(item) {
          if (query == null) {
            return true;
          }
          return item.name.indexOf(query >= 0 || item.description.indexOf(query) >= 0);
        };
      };
      $scope.progressBar.start();
      $scope.progressBar.set(50);
      promise = contactManager.loadContactList();
      return promise.then(function(contacts) {
        $scope.items = contacts;
        $log.log(contacts);
        return $scope.progressBar.end();
      }, function(data, status) {
        $scope.progressBar.end();
        if (status === "404") {
          return $rootScope.$broadcast('errorHappened', status, $location.url());
        } else if (status === "401") {
          return $location.url("/login");
        } else {
          return $log.log("Error Code: " + status + ", Message: " + data);
        }
      }, null);
    }
  ]).controller('ContactDetailCtrl', [
    '$scope', '$http', '$q', '$routeParams', 'contactManager', '$location', '$log', 'ModelBase', function($scope, $http, $q, $routeParams, contactManager, $location, $log, ModelBase) {
      $scope.progressBar.start();
      $scope.progressBar.set(50);
      $scope.backUrl = "#/contact";
      $scope.contact = null;
      $scope.showToolbar = true;
      $scope.showRefresh = true;
      $scope.newLink = {
        type: "Supplier",
        name: ""
      };
      $scope.changeType = function(type) {
        return $scope.newLink.type = type;
      };
      $scope.addLink = function() {
        $scope.newLink.modifiedDate = new Date();
        $scope.contact.links.push(angular.copy($scope.newLink));
        return $scope.newLink = {
          type: "Supplier",
          name: ""
        };
      };
      $scope.addData = function() {
        var newData;
        $scope.newData.createdBy = "cage";
        $scope.newData.modifiedBy = "cage";
        $scope.newData.contact = $scope.contact.id;
        newData = contactManager.initContactData($scope.newData);
        return $scope.contact.data.push(newData);
      };
      $scope.save = function() {
        var newContact, newContactDeffered, promises;
        $log.log($scope.contact);
        promises = [];
        $scope.progressBar.start();
        $scope.progressBar.set(20);
        $scope.contact.data.forEach(function(contactData) {
          var deffered;
          deffered = $q.defer();
          promises.push(deffered);
          if (contactData.url == null) {
            if (contactData.valuePair == null) {

            } else {
              return contactData.create(function(data) {
                return deffered.resolve(data);
              }, function(error) {
                return deffered.reject();
              });
            }
          } else if (contactData.valuePair == null) {
            return contactData["delete"](function(data) {
              return deffered.resolve(data);
            }, function(error) {
              return deffered.reject();
            });
          } else {
            return contactData.update(function(data) {
              return deffered.resolve(data);
            }, function(error) {
              return deffered.reject();
            });
          }
        });
        newContact = new ModelBase();
        newContact.url = $scope.contact.url;
        newContact.avator = $scope.contact.avator;
        newContact.name = $scope.contact.name;
        newContact.createdBy = $scope.contact.createdBy;
        newContact.modifiedBy = 'cage';
        newContact.description = "";
        $scope.contact.data.forEach(function(contactData) {
          if (contactData.keyPair === 'description' || contactData.keyPair === '描述') {
            return newContact.description = contactData.valuePair;
          }
        });
        newContactDeffered = $q.defer();
        promises.push(newContactDeffered);
        newContact.update(function(data) {
          return newContactDeffered.resolve(data);
        }, function(error) {
          return newContactDeffered.reject();
        });
        return $q.all(promises).then($scope.reload);
      };
      $scope.reload = function() {
        var promise;
        promise = contactManager.loadContact($routeParams.id);
        return promise.then(function(contactData) {
          $scope.contact = contactData;
          $scope.title = contactData.name;
          return $scope.progressBar.end();
        }, function(error, status) {
          $scope.progressBar.end();
          if (status === "404") {
            return $rootScope.$broadcast('errorHappened', status, $location.url());
          } else if (status === "401") {
            return $location.url("/login");
          } else {
            return $log.log("Error Code: " + status + ", Message: " + error);
          }
        }, null);
      };
      $scope.previousId = function() {
        var previousId;
        previousId = contactManager.getPreviousContact($scope.contact.id);
        if (previousId !== $scope.contact.id && angular.isNumber(previousId)) {
          return $location.url("/contact/" + previousId);
        }
      };
      $scope.nextId = function() {
        var nextId;
        nextId = contactManager.getNextContact($scope.contact.id);
        if (nextId !== $scope.contact.id && angular.isNumber(nextId)) {
          return $location.url("/contact/" + nextId);
        }
      };
      $scope.refreshLinks = function() {
        return $http.get('../mockData/links.json').success(function(data, status) {
          return $scope.contact.links = data;
        });
      };
      return $scope.reload();
    }
  ]).controller('NewContactCtrl', [
    '$scope', '$http', '$log', function($scope, $http, $log) {
      $scope.backUrl = "#/contact";
      $scope.contact = {
        info: {},
        avator: "./img/default_avatar.png",
        links: [],
        comments: []
      };
      $scope.title = "新建联系人";
      $scope.showToolbar = false;
      $scope.showRefresh = false;
      $scope.newLink = {
        type: "Supplier",
        name: ""
      };
      $scope.changeType = function(type) {
        return $scope.newLink.type = type;
      };
      $scope.addLink = function() {
        $scope.newLink.modifiedDate = new Date();
        $scope.contact.links.push($scope.newLink);
        return $scope.newLink = {
          type: "Supplier",
          name: ""
        };
      };
      return $scope.save = function() {
        return $log.log($scope.contact);
      };
    }
  ]);

}).call(this);
